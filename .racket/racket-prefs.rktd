(
 (|plt:DrRacket-splash-max-width| 714)
 (plt:framework-pref:drracket:unit-window-size (#f 897 1034))
 (plt:framework-pref:drracket:unit-window-position (0 97 24))
 (|plt:DrRacket 5.3.6-splash-max-width| 873)
 (plt:framework-pref:drracket:backtrace-window-width 400)
 (plt:framework-pref:drracket:backtrace-window-height 300)
 (plt:framework-pref:drracket:backtrace-window-x 3)
 (plt:framework-pref:drracket:backtrace-window-y 26)
 (plt:framework-pref:drracket:language-dialog:hierlist-default ("Legacy Languages" "Pretty Big"))
 (plt:framework-pref:drracket:recent-language-names (("Determine language from source" #6(#t print mixed-fraction-e #f #t debug) (default) #0() "#lang racket\n" #t #t ((main) (test))) ("Pretty Big" . #7(#t trad-write mixed-fraction-e #f #t debug #t))))
 (plt:framework-pref:drracket:language-settings ((-32768) (#6(#t print mixed-fraction-e #f #t debug) (default) #0() "#lang racket\n" #t #t ((main) (test)))))
 (plt:framework-pref:framework:verify-exit #t)
 (plt:framework-pref:drracket:console-previous-exprs
  (
   ("atom? 1")
   ("atom? 1")
   ("atom? 1")
   ("atom? a")
   ("atom? 1")
   ("(atom? 1)")
   ("(atom? 'a\n         )")
   ("(atom? '(1 2 3))\n         \n         ")
   ("(atom? '())\n         \n         ")
   ("(count-list '(4 9 16))")
   ("(count-list '(4 9 16))")
   ("(count-list '(4 9 16))")
   ("(count-list '(4 9 16))")
   ("(count-list '(4 9 16))")
   ("(count-list '(1 (two 3)4))")
   ("(count-list '(1 5 9 66 1 7))\n              ")
   ("(keep-if even? '(4 9 16))")
   ("(keep-if even? '(4 9 16))")
   ("(keep-if even? '(4 9 16))")
   ("(keep-if even? '(4 9 16))")
   ("(keep-if even? '(4 9 16 8 7 6 5))")
   ("(keep-if even? '())")
   ("(keep-if even? '(1 2 'a '(1 2 3) 1))")
   ("(first-n 3 '(4 9 16 25))")
   ("(first-n 3 '(4 9 16 25))")
   ("(first-n 3 '(4 9 16 25))")
   ("(first-n 3 '(4 9 16 25))")
   ("(first-n 2 '(4 9 16 25))\n")
   ("(first-n 2 '(4 9 16 25))\n")
   ("(first-n 5 '(4 9 16 25))")
   ("(first-n 5 '(4 9 16 25))")
   ("(map-to-each sqrt '(4 9 16))")
   ("(map-to-each sqrt '(25 36 49))")
   ("(fnctn)")
   ("fnctn")
   ("'(a . (b c ))")
   ("(occurs*? 'a '((1 a) 3 5 6))")
   ("(occurs*? 'b '((3 4 a c) 9 (2 7 b a) 16))")
   ("(cons 'a '(b))")
   ("(cons 'a 'b)")
   ("'(a. (b c))")
   ("(a . (b c))")
   ("'(a . (b c))")
   ("'(a b . ())")
   ("(cons 'a (cons 'b 'c))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a  b a))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("(subst-all 'a 'new-a '(a b a))")
   ("(subst-all 'a 'new-a '(a b a))")
   ("(subst-all 'a 'new-a '(a . (b . a)))\n             ")
   ("(subst-all 'a 'new-a '(a . (b . a)))")
   ("( partition 5 (random-list 1 20 20))")
   ("( partition 5 (random-list 1 20 20))")
   ("( partition 10 (random-list 1 20 20))")
   ("( partition 10 (random-list 1 50 20))")
   ("(my-quicksort ((7 5 2 1) 11 48 11 32 45 26 22 31 14 26 31 11 47 24 19 49))")
   ("( partition 10 (random-list 1 50 20))")
   ("(my-quicksort (5 4 46 49 32 33 12 21 29 45 22 17 38 29 42 35 19 36 11 44))")
   ("(my-quicksort '(5 4 46 49 32 33 12 21 29 45 22 17 38 29 42 35 19 36 11 44))")
   ("(count-calls)")
   ("(count-calls)")
   ("(count-calls)")
   ("(count-calls)")
   ("(count-calls)")
   ("(count-calls)")
   ("(symbol?)")
   ("(number? 12)")
   ("(rev '(1 3 4))")
   ("(convert-loop sqrt)")
   ("9")
   ("(read)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
   ("(convert-loop sqrt)")
  ))
 (plt:framework-pref:framework:exit-when-no-frames #t)
 (plt:framework-pref:plt:debug-tool:stack/variable-area 9/10)
 (plt:framework-pref:drracket:unit-window-size-percentage 1793/2476)
 (plt:framework-pref:drracket:window-size #hash((#f . (#f 600 650)) (((0 0 1280 800)) . (#f 600 650)) (((0 0 1276 755)) . (#t 600 650))))
 (plt:framework-pref:drracket:window-position #hash((#f . (0 12 104)) (((0 0 1280 800)) . (0 12 104)) (((0 0 1276 755)) . (0 3 26))))
 (plt:framework-pref:framework:recently-opened-files/pos
  (
   (#"/home/marvi154/kurs/tddc74/lab2/la02.rkt" 0 0)
   (#"/home/marvi154/kurs/tddc74/lab0/test.rkt" 0 0)
   (#"/home/marvi154/kurs/tddc74/lab0/tools.rtk" 0 0)
   (#"/home/marvi154/kurs/tddc74/lab0/la00.rtk" 0 0)
   (#"/home/marvi154/kurs/tddc74/lab0/test.rtk" 0 0)
   (#"/home/marvi154/TDDC74/lab00/tools.rkt" 0 0)
   (#"/home/marvi154/TDDC74/lab00/lab0" 0 0)
   (#"/home/marvi154/TDDC74/lab03/pram-lab03" 0 0)
   (#"/home/marvi154/pram-lab03" 0 0)
   (#"/home/marvi154/lab2 14feb.rkt" 0 0)
   (#"/home/marvi154/lab2 13feb.rkt" 0 0)
   (#"/home/marvi154/lab1 komplettering1 02-09.rkt" 0 0)
   (#"/home/marvi154/pram-la02" 0 0)
   (#"/home/marvi154/lab1 01-28.klar.rkt" 0 0)
  ))
)
